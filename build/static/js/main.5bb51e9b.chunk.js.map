{"version":3,"sources":["context/EmployeeContext.js","components/Form.js","components/TableRow.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeContext","createContext","EmployeeContextProvider","children","useState","newEmployee","setNewEmployee","employees","setEmployees","isDeleted","setIsDeleted","isUpdated","setIsUpdated","getAllEmployees","axios","get","then","res","console","log","data","useEffect","Provider","value","MyForm","useContext","formInputs","setFormInputs","errors","setErrors","setField","key","className","Form","onSubmit","e","preventDefault","newErrors","name","age","emailAddress","role","length","includes","handleFormErrors","Object","keys","post","address","target","reset","catch","err","error","Group","Control","type","placeholder","onChange","isInvalid","Feedback","Button","variant","TableRow","index","id","eName","eAge","eEmail","eRole","isEdit","setIsEdit","setName","setAge","email","setEmail","setRole","setError","onClick","put","delete","MyTable","Table","striped","bordered","hover","responsive","map","employee","i","_id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bb51e9b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useState, useEffect } from \"react\";\r\n\r\nconst EmployeeContext = createContext();\r\n\r\nconst EmployeeContextProvider = ({ children }) => {\r\n  const [newEmployee, setNewEmployee] = useState(false);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [isDeleted, setIsDeleted] = useState(false);\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n  const getAllEmployees = () => {\r\n    // Get all employees from db\r\n    axios.get(\"/api/employees\").then((res) => {\r\n      console.log(res.data);\r\n      setEmployees(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n    setIsDeleted(false);\r\n  }, [isDeleted]);\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n    setIsUpdated(false);\r\n    console.log(\"component rerenderd\");\r\n  }, [isUpdated]);\r\n\r\n  useEffect(() => {\r\n    getAllEmployees();\r\n    setNewEmployee(false);\r\n  }, [newEmployee]);\r\n\r\n  return (\r\n    <EmployeeContext.Provider\r\n      value={{\r\n        newEmployee,\r\n        setNewEmployee,\r\n        employees,\r\n        setEmployees,\r\n        isDeleted,\r\n        setIsDeleted,\r\n        setIsUpdated,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmployeeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { EmployeeContextProvider, EmployeeContext };\r\n","import { useState, useContext } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { EmployeeContext } from \"../context/EmployeeContext\";\r\n\r\nconst MyForm = () => {\r\n  const { setNewEmployee } = useContext(EmployeeContext);\r\n  const [formInputs, setFormInputs] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const setField = (key, value) => {\r\n    setFormInputs({\r\n      ...formInputs,\r\n      [key]: value,\r\n    });\r\n\r\n    // Check to see if errors exists, if it does remove it\r\n    if (!!errors[key]) {\r\n      setErrors({\r\n        ...errors,\r\n        [key]: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFormErrors = () => {\r\n    // Destructuring our keys from our formInputs { }\r\n    const { name, age, emailAddress, role } = formInputs;\r\n    const newErrors = {};\r\n\r\n    if (!name || name === \"\") {\r\n      newErrors.name = \"Cannot be blank\";\r\n    } else if (name.length >= 30) newErrors.name = \"Name is too long!\";\r\n\r\n    if (!age || age === \"\") {\r\n      newErrors.age = \"Please fill out age\";\r\n    } else if (age < 18 || age > 99) {\r\n      newErrors.age = \"Age requirements is 18 - 99\";\r\n    }\r\n\r\n    if (!emailAddress || emailAddress === \"\") {\r\n      newErrors.emailAddress = \"Cannot be blank\";\r\n    } else if (!emailAddress.includes(\"@\") || !emailAddress.includes(\".com\")) {\r\n      newErrors.emailAddress = \"Please enter a valid email address\";\r\n    }\r\n\r\n    if (!role || role === \"\") {\r\n      newErrors.role = \"Please fill out employee role\";\r\n    } else if (role.length > 30) {\r\n      newErrors.role = \"Role is too long!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = handleFormErrors();\r\n\r\n    console.log(newErrors);\r\n    // Check if newErrors {} keys is a value greater than 0\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      // Post form data to database\r\n      axios\r\n        .post(\"/api/employees\", {\r\n          name: formInputs.name,\r\n          age: formInputs.age,\r\n          address: formInputs.emailAddress,\r\n          role: formInputs.role,\r\n        })\r\n        .then(() => {\r\n          console.log(\"employee successfully added\");\r\n          // Reset the form inputs to \"\"\r\n          e.target.reset();\r\n\r\n          setFormInputs({\r\n            name: \"\",\r\n            age: \"\",\r\n            emailAddress: \"\",\r\n            role: \"\",\r\n          });\r\n\r\n          setNewEmployee(true);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Employee Name\"\r\n            onChange={(e) => setField(\"name\", e.target.value)}\r\n            isInvalid={errors.name}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.name}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter Employee Age\"\r\n            onChange={(e) => setField(\"age\", e.target.value)}\r\n            isInvalid={errors.age}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.age}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Employee Email\"\r\n            onChange={(e) => setField(\"emailAddress\", e.target.value)}\r\n            isInvalid={errors.emailAddress}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.emailAddress}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Employee Position\"\r\n            onChange={(e) => setField(\"role\", e.target.value)}\r\n            isInvalid={errors.role}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.role}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { EmployeeContext } from \"../context/EmployeeContext\";\r\nimport axios from \"axios\";\r\n\r\nconst TableRow = ({ index, id, eName, eAge, eEmail, eRole }) => {\r\n  const { setIsDeleted, setIsUpdated } = useContext(EmployeeContext);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [name, setName] = useState(eName);\r\n  const [age, setAge] = useState(eAge);\r\n  const [email, setEmail] = useState(eEmail);\r\n  const [role, setRole] = useState(eRole);\r\n  const [error, setError] = useState({});\r\n\r\n  const handleDelete = () => {\r\n    console.log(id);\r\n    axios\r\n      .delete(`/api/employees/${id}`)\r\n      .then(() => {\r\n        console.log(\"success\");\r\n        setIsDeleted(true);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    console.log(id);\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleFormErrors = () => {\r\n    // Destructuring our keys from our formInputs { }\r\n    const newErrors = {};\r\n\r\n    if (!name || name === \"\") {\r\n      newErrors.name = \"Cannot be blank\";\r\n    } else if (name.length >= 30) newErrors.name = \"Name is too long!\";\r\n\r\n    if (!age || age === \"\") {\r\n      newErrors.age = \"Please fill out age\";\r\n    } else if (age < 18 || age > 99) {\r\n      newErrors.age = \"Age requirements is 18 - 99\";\r\n    }\r\n\r\n    if (!email || email === \"\") {\r\n      newErrors.email = \"Cannot be blank\";\r\n    } else if (!email.includes(\"@\") || !email.includes(\".com\")) {\r\n      newErrors.email = \"Please enter a valid email address\";\r\n    }\r\n\r\n    if (!role || role === \"\") {\r\n      newErrors.role = \"Please fill out employee role\";\r\n    } else if (role.length > 30) {\r\n      newErrors.role = \"Role is too long!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    // Check validations on name, age, role, address\r\n    const newErrors = handleFormErrors();\r\n    console.log(newErrors); // Should return an empty object if NO errors\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setError(newErrors);\r\n    } else {\r\n      setIsEdit(false);\r\n      // Do Put request here\r\n      axios\r\n        .put(`/api/employees/${id}`, {\r\n          name: name,\r\n          age: age,\r\n          address: email,\r\n          role: role,\r\n        })\r\n        .then(() => {\r\n          console.log(\"success\");\r\n          setIsUpdated(true);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        {isEdit ? (\r\n          <>\r\n            <input\r\n              className=\"edit-input\"\r\n              placeholder={name}\r\n              value={name}\r\n              onChange={(e) => {\r\n                if (error[\"name\"]) {\r\n                  setError({\r\n                    ...error,\r\n                    name: \"\",\r\n                  });\r\n                }\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n            {error.name && <p className=\"error-message\"> {error.name} </p>}\r\n          </>\r\n        ) : (\r\n          eName\r\n        )}\r\n      </td>\r\n      <td>\r\n        {isEdit ? (\r\n          <>\r\n            <input\r\n              className=\"edit-input\"\r\n              placeholder={age}\r\n              value={age}\r\n              onChange={(e) => {\r\n                if (error[\"age\"]) {\r\n                  setError({\r\n                    ...error,\r\n                    age: \"\",\r\n                  });\r\n                }\r\n                setAge(e.target.value);\r\n              }}\r\n            />\r\n            {error.age && <p className=\"error-message\"> {error.age} </p>}\r\n          </>\r\n        ) : (\r\n          eAge\r\n        )}\r\n      </td>\r\n      <td>\r\n        {isEdit ? (\r\n          <>\r\n            <input\r\n              className=\"edit-input\"\r\n              placeholder={email}\r\n              value={email}\r\n              onChange={(e) => {\r\n                if (error[\"email\"]) {\r\n                  setError({\r\n                    ...error,\r\n                    email: \"\",\r\n                  });\r\n                }\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            {error.email && <p className=\"error-message\">{error.email}</p>}\r\n          </>\r\n        ) : (\r\n          eEmail\r\n        )}\r\n      </td>\r\n      <td>\r\n        {isEdit ? (\r\n          <>\r\n            <input\r\n              className=\"edit-input\"\r\n              placeholder={role}\r\n              value={role}\r\n              onChange={(e) => {\r\n                if (error[\"role\"]) {\r\n                  setError({\r\n                    ...error,\r\n                    role: \"\",\r\n                  });\r\n                }\r\n                setRole(e.target.value);\r\n              }}\r\n            />\r\n            {error.role && <p className=\"error-message\"> {error.role} </p>}\r\n          </>\r\n        ) : (\r\n          eRole\r\n        )}\r\n      </td>\r\n      <td>\r\n        {isEdit ? (\r\n          <button onClick={handleSaveEdit} className=\"my-btn\">\r\n            ✔️\r\n          </button>\r\n        ) : (\r\n          <button onClick={handleEdit} className=\"my-btn\">\r\n            ✏️\r\n          </button>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button onClick={handleDelete} className=\"my-btn\">\r\n          ❌\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React, { useContext } from \"react\";\r\nimport { EmployeeContext } from \"../context/EmployeeContext\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst MyTable = () => {\r\n  const { employees } = useContext(EmployeeContext);\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <Table striped bordered hover variant=\"dark\" responsive>\r\n        <thead>\r\n          <tr>\r\n            <th> # </th>\r\n            <th> Name</th>\r\n            <th> Age</th>\r\n            <th> Email</th>\r\n            <th> Role </th>\r\n            <th> Edit </th>\r\n            <th> Delete </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map((employee, i) => {\r\n            let index = i + 1;\r\n            return (\r\n              <TableRow\r\n                index={index}\r\n                id={employee._id}\r\n                eName={employee.name}\r\n                eAge={employee.age}\r\n                eEmail={employee.address}\r\n                eRole={employee.role}\r\n                key={employee._id}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTable;\r\n","import \"./App.scss\";\nimport { MyForm, MyTable } from \"./components/\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add Employee</h1>\n      <MyForm />\n      <h1 className=\"title\">All Employees</h1>\n      <MyTable />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { EmployeeContextProvider } from \"./context/EmployeeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <EmployeeContextProvider>\n      <App />\n    </EmployeeContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}